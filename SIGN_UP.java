/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package LIBRARY_PACKAGE;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author rlith
 */
public class SIGN_UP extends javax.swing.JFrame {

    /**
     * Creates new form REGISTRATION
     */
    public SIGN_UP() {
        initComponents();
        setDefaultCloseOperation(SIGN_UP.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        USERNAME = new javax.swing.JTextField();
        SIGN_UP_BUTTON = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        PASSWORD = new javax.swing.JPasswordField();
        EMAIL = new javax.swing.JTextField();
        SIGN_IN = new javax.swing.JButton();
        QUESTION = new javax.swing.JComboBox<>();
        ANSWER = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("USERNAME");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("EMAIL");

        USERNAME.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        USERNAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                USERNAMEActionPerformed(evt);
            }
        });

        SIGN_UP_BUTTON.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        SIGN_UP_BUTTON.setText("SIGN UP");
        SIGN_UP_BUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIGN_UP_BUTTONActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SIGN UP");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("PASSWORD");

        PASSWORD.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        EMAIL.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        EMAIL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EMAILActionPerformed(evt);
            }
        });

        SIGN_IN.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        SIGN_IN.setForeground(new java.awt.Color(0, 0, 204));
        SIGN_IN.setText("Already have an account? SIGN IN");
        SIGN_IN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIGN_INActionPerformed(evt);
            }
        });

        QUESTION.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        QUESTION.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "What was your childhood dream job?", "What is your most unusual hobby?", "If you had to change your name, what would you pick?" }));
        QUESTION.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QUESTIONActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(USERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EMAIL, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PASSWORD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(QUESTION, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(ANSWER, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addComponent(SIGN_UP_BUTTON, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(SIGN_IN, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel3)
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(USERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EMAIL, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PASSWORD, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ANSWER, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(QUESTION, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(SIGN_UP_BUTTON, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(SIGN_IN)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void USERNAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_USERNAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_USERNAMEActionPerformed

    private void SIGN_UP_BUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIGN_UP_BUTTONActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:mysql://localhost:3306/LIBRARY_MANAGEMENT_SYSTEM";
        String user = "root";
        String pass = "Lithiyasree12@";

        String username = USERNAME.getText();
        String email = EMAIL.getText();
        String password = new String(PASSWORD.getPassword());
        String securityQuestion = QUESTION.getSelectedItem().toString();
        String answer = ANSWER.getText();

        if (username.isEmpty() || email.isEmpty() || password.isEmpty() || answer.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required!");
            return;
        }

        try {
            Connection conn = DriverManager.getConnection(url, user, pass);

            // Check if user already exists
            String checkQuery = "SELECT USER_ID FROM USERS WHERE USER_NAME = ? OR EMAIL = ?";
            PreparedStatement checkPs = conn.prepareStatement(checkQuery);
            checkPs.setString(1, username);
            checkPs.setString(2, email);
            ResultSet checkRs = checkPs.executeQuery();

            if (checkRs.next()) {
                JOptionPane.showMessageDialog(this, "User already exists! Please log in.");
                new USER_LOGIN().setVisible(true);
                dispose();
                return;
            }

            // Insert new user with security question
            String query = "INSERT INTO USERS(USER_NAME, EMAIL, PASSWORD, QUESTION, ANSWER) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
            ps.setString(1, username);
            ps.setString(2, email);
            ps.setString(3, password);
            ps.setString(4, securityQuestion);
            ps.setString(5, answer);

            int affectedRows = ps.executeUpdate();

            if (affectedRows > 0) {
                ResultSet rs = ps.getGeneratedKeys();
                if (rs.next()) {
                    int userId = rs.getInt(1);
                    JOptionPane.showMessageDialog(this, "Registration Successful!\nYour User ID: " + userId);
                    new USER_LOGIN(userId).setVisible(true);
                    dispose();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Registration failed! Please try again.");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
            ex.printStackTrace();
        }

//        String url = "jdbc:mysql://localhost:3306/LIBRARY_MANAGEMENT_SYSTEM";
//        String user = "root";
//        String pass = "Lithiyasree12@";
//
//        String username = USERNAME.getText();
//        String email = EMAIL.getText();
//        String password = new String(PASSWORD.getPassword());
//
//        if (username.isEmpty() || email.isEmpty() || password.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "All fields are required!");
//            return;
//        }
//
//        try {
//            Connection conn = DriverManager.getConnection(url, user, pass);
//
//            String checkQuery = "SELECT USER_ID FROM users WHERE username = ? OR email = ?";
//            PreparedStatement checkPs = conn.prepareStatement(checkQuery);
//            checkPs.setString(1, username);
//            checkPs.setString(2, email);
//            ResultSet checkRs = checkPs.executeQuery();
//
//            if (checkRs.next()) {
//                JOptionPane.showMessageDialog(this, "User already exists! Please log in.");
//                new USER_LOGIN().setVisible(true);  // Open login screen
//                dispose();
//                return;
//            }
//
//            // 🔹 Step 2: Insert new user if not found
//            String query = "INSERT INTO users (username, email, password) VALUES (?, ?, ?)";
//            PreparedStatement ps = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
//            ps.setString(1, username);
//            ps.setString(2, email);
//            ps.setString(3, password);
//
//            int affectedRows = ps.executeUpdate();
//
//            if (affectedRows > 0) {
//                ResultSet rs = ps.getGeneratedKeys();
//                int userId = -1;
//                if (rs.next()) {
//                    userId = rs.getInt(1);  // Fetch the generated user ID
//                    JOptionPane.showMessageDialog(this, "Registration Successful!\nYour User ID: " + userId);
//                    System.out.println("userid_sign_up"+" "+userId);
//                    new USER_LOGIN(userId).setVisible(true);  // Pass user ID to login screen
//                    dispose();
//                }
//            } else {
//                JOptionPane.showMessageDialog(this, "Registration failed! Please try again.");
//            }
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
//            ex.printStackTrace();
//        }

    }//GEN-LAST:event_SIGN_UP_BUTTONActionPerformed

    private void EMAILActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EMAILActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EMAILActionPerformed

    private void SIGN_INActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIGN_INActionPerformed
        // TODO add your handling code here:
        new USER_LOGIN().setVisible(true);

    }//GEN-LAST:event_SIGN_INActionPerformed

    private void QUESTIONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QUESTIONActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QUESTIONActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SIGN_UP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SIGN_UP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SIGN_UP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SIGN_UP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SIGN_UP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ANSWER;
    private javax.swing.JTextField EMAIL;
    private javax.swing.JPasswordField PASSWORD;
    private javax.swing.JComboBox<String> QUESTION;
    private javax.swing.JButton SIGN_IN;
    private javax.swing.JButton SIGN_UP_BUTTON;
    private javax.swing.JTextField USERNAME;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
